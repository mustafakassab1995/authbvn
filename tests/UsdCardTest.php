<?phpuse Flutterwave\Card;use Flutterwave\Flutterwave;use Flutterwave\AuthModel;use Flutterwave\Currencies;use Flutterwave\Countries;class UsdCardTest extends PHPUnit_Framework_TestCase {    public function setUp() {        Flutterwave::setMerchantCredentials("tk_tdyrSMQo8a", "tk_NabYp2XjZ6G9WwdFruzK");    }    public function testTokenize() {        $resp = $this->tokenizeCard();        $this->assertTrue($resp->isSuccessfulResponse());    }    public function testPreAuth() {        $response = $this->preAuthorize();        $this->assertTrue($response->isSuccessfulResponse());    }    public function testCapture() {        $response = $this->preAuthorize();        $authorizedId = $response->getResponseData()['data']['authorizeId'];        $transactionRef = $response->getResponseData()['data']['transactionreference'];        $resp = Card::capture($transactionRef, $authorizedId, 10, Currencies::USD, Countries::UNITED_STATES);        $this->assertTrue($resp->isSuccessfulResponse());    }    /**     * @return \Flutterwave\ApiResponse     */    protected function tokenizeCard()    {        $card = [            "card_no"      => "5555555555554444",            "cvv"          => "812",            "expiry_month" => "08",            "expiry_year"  => "18"        ];        return Card::tokenize($card, AuthModel::NOAUTH, Flutterwave::SMS);    }    /**     * @return \Flutterwave\ApiResponse     */    protected function preAuthorize()    {        $response = $this->tokenizeCard();        $response = Card::preAuthorize($response->getResponseData()['data']['responsetoken'], 10, Currencies::USD, Countries::UNITED_STATES);        return $response;    }}